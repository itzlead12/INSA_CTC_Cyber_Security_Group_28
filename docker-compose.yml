services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: waf_service
      POSTGRES_USER: waf_user
      POSTGRES_PASSWORD: waf_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - waf_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U waf_user -d waf_service"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    networks:
      - waf_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  django:
    build: ./Core  
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./Core:/app
    ports:
      - "8000:8000"  # ADD THIS LINE - expose Django to host
    environment:
      - DATABASE_URL=postgresql://waf_user:waf_password@postgres:5432/waf_service
      - SECRET_KEY=django-insecure-default-key
      - DEBUG=True  # Add this for WAF authentication
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - waf_network

  fastapi:
    build: ./waf_proxy
    command: >
      sh -c "sleep 10 &&  # Wait for Django to be ready
             uvicorn main:app --host 0.0.0.0 --port 8080 --workers 4"
    volumes:
      - ./waf_proxy:/app
    ports:
      - "8080:8080"
    environment:
      - DJANGO_API_URL=http://django:8000
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      django:
        condition: service_started
    networks:
      - waf_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - django
      - fastapi
    networks:
      - waf_network

volumes:
  postgres_data:

networks:
  waf_network:
    driver: bridge